version: '3.8'

services:
  keypad:
    build:
      context: ./src/keypad
      dockerfile: Dockerfile
    devices:
      - /dev/gpiomem:/dev/gpiomem
    # use docker compose with the host network
    # https://docs.docker.com/compose/compose-file/compose-file-v3/#network_mode
    network_mode: "host"
    command: python3 main.py
    depends_on:
      - webapp

  webapp:
    build:
      context: ./src/webapp
      dockerfile: Dockerfile
    devices:
      - /dev/gpiomem:/dev/gpiomem
    #volumes:
    #  - ./src/wepapp/:/src/
    #command: uvicorn app.api.server:app --reload --workers 1 --host 0.0.0.0 --port 8000
    #command: python3 -m main.py
    command: python3 main.py
    env_file:
      - .env
    ports:
      - 8000:8000
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      # copy the sql script to create tables
      - ./src/sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
    env_file:
      - .env
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      interval: 15s
      timeout: 5s
      retries: 3

volumes:
    postgres_data:
